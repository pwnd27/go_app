package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.43

import (
	"context"
	"fmt"
	"github.com/pwnd27/go_app/db"
	"github.com/pwnd27/go_app/graph/model"
)

// CreateUser is the resolver for the createUser field.
func (r *mutationResolver) CreateUser(ctx context.Context, input model.UserInput) (*model.User, error) {
	var arg db.AddUserParams
	arg.Username = input.Username
	arg.HashedPassword = input.Password
	arg.FullName = input.FullName
	arg.Email = input.Email
	u, err := r.Store.AddUser(ctx, arg)
	if err != nil {
		return nil, err
	}
	var i model.User
	i.Username = u.Username
	i.FullName = u.FullName
	i.Email = u.Email
	t := u.CreatedAt.String()
	i.CreatedAt = &t
	t = u.PasswordChangedAt.String()
	i.PasswordChangedAt = &t
	return &i, nil
}

// Users is the resolver for the users field.
func (r *queryResolver) Users(ctx context.Context) ([]*model.User, error) {
	panic(fmt.Errorf("not implemented: Users - users"))
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
